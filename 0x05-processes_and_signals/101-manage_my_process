#!/usr/bin/env bash
# Path to the PID file

if [ "${1}" == "start" ]
then
    # Start the process in the background
    ./manage_my_process &

    # Create a PID file to track the process
    touch /var/run/my_process.pid
    echo "$!" > /var/run/my_process.pid  # Store the PID of the background process

    echo "manage_my_process started"  # Confirmation message
elif [ "${1}" == "stop" ]
then
    echo "manage_my_process stopped"  # Confirmation message

    # Terminate the process using the PID stored in the file
    kill "$(cat /var/run/my_process.pid)"

    # Remove the PID file after stopping the process
    rm /var/run/my_process.pid
elif [ "${1}" == "restart" ]
then
    # Stop and restart the process
    kill "$(cat /var/run/my_process.pid)"  # Stop the existing process
    rm /var/run/my_process.pid  # Remove the PID file

    # Start the new process in the background
    ./manage_my_process &

    # Create a new PID file and store the PID
    touch /var/run/my_process.pid
    echo "$!" > /var/run/my_process.pid  # Store the PID of the new process

    echo "manage_my_process restarted"  # Confirmation message
else
    # Provide usage information for incorrect arguments
    echo "Usage: manage_my_process {start|stop|restart}"
fi

